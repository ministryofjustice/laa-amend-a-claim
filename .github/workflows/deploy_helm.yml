name: Deploy Helm Chart

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on (default: main)'
        required: false
        default: 'main'

  push:
    branches: [feature/BC-111-sentry-logging-integration]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref_name }}

      - name: Get latest commit SHA from checked-out branch
        id: get_sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials (Assume Role)
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a #v4.3.1
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: Authenticate to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        id: login-ecr

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build JAR
        run: ./gradlew build
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image to the container repository
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ steps.get_sha.outputs.sha }}
          ENV_NAME: ${{ vars.ENV_NAME }}

      - name: Authenticate with Kubernetes cluster in Cloud Platform
        uses: ministryofjustice/laa-reusable-github-actions/.github/actions/authenticate_to_cluster@main
        with:
          kube-cert: ${{ secrets.KUBE_CERT }}
          kube-token: ${{ secrets.KUBE_TOKEN }}
          kube-cluster: ${{ secrets.KUBE_CLUSTER }}
          kube-namespace: ${{ secrets.KUBE_NAMESPACE }}

      - name: Helm Deploy
        uses: ministryofjustice/laa-reusable-github-actions/.github/actions/helm-deploy@main
        with:
          k8s_namespace: ${{ secrets.KUBE_NAMESPACE }}
          helm_release_name: laa-amend-a-claim-${{ vars.ENV_NAME }}
          helm_chart: helm_deploy
          helm_values_path: helm_deploy/values-${{ vars.ENV_NAME }}.yaml
          image_registry: ${{ steps.login-ecr.outputs.image_registry }}
          image_repo: ${{ vars.ECR_REPOSITORY }}
          image_tag: ${{ steps.get_sha.outputs.sha }}
